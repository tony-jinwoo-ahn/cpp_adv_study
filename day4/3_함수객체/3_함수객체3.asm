; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27031.1 

	TITLE	D:\cpp\day4\3_함수객체3.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?Add@@YAHHH@Z					; Add
PUBLIC	_main
PUBLIC	??$foo@P6AHHH@Z@@YAXP6AHHH@Z@Z			; foo<int (__cdecl*)(int,int)>
PUBLIC	??$foo@UPlus@@@@YAXUPlus@@@Z			; foo<Plus>
; Function compile flags: /Odtp
; File d:\cpp\day4\3_함수객체3.cpp
;	COMDAT ??$foo@UPlus@@@@YAXUPlus@@@Z
_TEXT	SEGMENT
_n$ = -4						; size = 4
_f$ = 8							; size = 1
??$foo@UPlus@@@@YAXUPlus@@@Z PROC			; foo<Plus>, COMDAT

; 14   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 10   : 	inline int operator() (int a, int b) { return a + b; }

	mov	eax, 1
	add	eax, 2

; 15   : //	std::cout << __FUNCSIG__ << std::endl;
; 16   : 	int n = f(1, 2); // 이 순간을 잘 생각해 보세요. inline 치환 불가. 함수포인터 받으면 주소밖에 모르는데 치환을 어케하겠음.

	mov	DWORD PTR _n$[ebp], eax

; 17   : 	// f.operator()(1,2)
; 18   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$foo@UPlus@@@@YAXUPlus@@@Z ENDP			; foo<Plus>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\cpp\day4\3_함수객체3.cpp
;	COMDAT ??$foo@P6AHHH@Z@@YAXP6AHHH@Z@Z
_TEXT	SEGMENT
_n$ = -4						; size = 4
_f$ = 8							; size = 4
??$foo@P6AHHH@Z@@YAXP6AHHH@Z@Z PROC			; foo<int (__cdecl*)(int,int)>, COMDAT

; 14   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 15   : //	std::cout << __FUNCSIG__ << std::endl;
; 16   : 	int n = f(1, 2); // 이 순간을 잘 생각해 보세요. inline 치환 불가. 함수포인터 받으면 주소밖에 모르는데 치환을 어케하겠음.

	push	2
	push	1
	call	DWORD PTR _f$[ebp]
	add	esp, 8
	mov	DWORD PTR _n$[ebp], eax

; 17   : 	// f.operator()(1,2)
; 18   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$foo@P6AHHH@Z@@YAXP6AHHH@Z@Z ENDP			; foo<int (__cdecl*)(int,int)>
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\cpp\day4\3_함수객체3.cpp
_TEXT	SEGMENT
_p$ = -1						; size = 1
_main	PROC

; 20   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 21   : 	Plus p;
; 22   : 	foo(Add); // 함수 포인터 전달(int (*f)(int, int))

	push	OFFSET ?Add@@YAHHH@Z			; Add
	call	??$foo@P6AHHH@Z@@YAXP6AHHH@Z@Z		; foo<int (__cdecl*)(int,int)>
	add	esp, 4

; 23   : 	foo(p);// Plus 타입으로 전달

	movzx	eax, BYTE PTR _p$[ebp]
	push	eax
	call	??$foo@UPlus@@@@YAXUPlus@@@Z		; foo<Plus>
	add	esp, 4

; 24   : }

	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File d:\cpp\day4\3_함수객체3.cpp
;	COMDAT ?Add@@YAHHH@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?Add@@YAHHH@Z PROC					; Add, COMDAT

; 4    : inline int Add(int a, int b) { 

	push	ebp
	mov	ebp, esp

; 5    : //	std::cout << a + b << std::endl;
; 6    : 	return a + b; 

	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]

; 7    : }

	pop	ebp
	ret	0
?Add@@YAHHH@Z ENDP					; Add
_TEXT	ENDS
END
